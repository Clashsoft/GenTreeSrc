plugins {
	id 'java'
	id 'antlr'
	id 'maven-publish'
	id 'com.jfrog.bintray' version '1.8.4'
	id 'de.clashsoft.simple-publish' version '0.2.0'
	id 'de.clashsoft.gentreesrc-gradle' version '0.8.0'
}

group = 'de.clashsoft'
version = 'git describe --tags'.execute().text[1..-2] // strip v and \n
description = 'A tool that generates Tree and Visitor classes from an AST model description file.'

publishInfo {
	websiteUrl = 'https://github.com/Clashsoft/gentreesrc'
	issueTrackerUrl = 'https://github.com/Clashsoft/gentreesrc/issues'
	vcsUrl = 'https://github.com/Clashsoft/gentreesrc'
	githubRepo = 'Clashsoft/gentreesrc'
	labels = [ 'source', 'generator', 'tree', 'ast' ]

	license {
		shortName 'BSD 3-Clause'
		longName 'BSD 3-Clause "New" or "Revised" License'
		url 'https://opensource.org/licenses/BSD-3-Clause'
	}

	developer {
		id 'Clashsoft'
		name 'Adrian Kunz'
		email 'clashsoft@hotmail.com'
	}
}

sourceCompatibility = 1.8

repositories {
	mavenCentral()
	jcenter()
}

dependencies {
	gentreesrc group: 'de.clashsoft', name: 'gentreesrc', version: '0.10.0'

	testCompile group: 'junit', name: 'junit', version: '4.12'

	// https://mvnrepository.com/artifact/org.antlr/antlr4
	antlr group: 'org.antlr', name: 'antlr4', version: '4.7.2'

	// https://mvnrepository.com/artifact/org.antlr/antlr4-runtime
	compile group: 'org.antlr', name: 'antlr4-runtime', version: '4.7.2'

	// https://mvnrepository.com/artifact/org.antlr/ST4
	compile group: 'org.antlr', name: 'ST4', version: '4.1'

	// https://mvnrepository.com/artifact/commons-cli/commons-cli
	compile group: 'commons-cli', name: 'commons-cli', version: '1.4'
}

// --------------- Resources ---------------

processResources {
	filesMatching('**/*.stg') {
		filter {
			it = it.replace('$$version$$', version.toString())
			it
		}
	}
}

// --------------- ANTLR ---------------

def generatedANTLRDir = "$buildDir/generated-src/antlr/main/"

sourceSets.main.java.srcDir(generatedANTLRDir)

configurations.compile {
	extendsFrom = extendsFrom.findAll { it != configurations.antlr }
}

// https://stackoverflow.com/questions/40995727/gradle-cant-find-antlr-token-file
generateGrammarSource {
	def packageName = 'de.clashsoft.gentreesrc.antlr'
	arguments += [ '-package', packageName ]
	outputDirectory = file("$generatedANTLRDir/${ packageName.replace('.', '/') }/")
}

// --------------- GenTreeSrc ---------------

// https://github.com/gradle/gradle/issues/7706#issuecomment-470999724
def oldGroup = project.group
try {
	project.group = 'dummy_group_for_bootstrap'
	configurations.gentreesrc.files
}
finally {
	project.group = oldGroup
}

def taskName = 'gentreesrcTestJavaNew'
def inputDir = 'src/test/gentreesrc'
def outputDir = "$buildDir/generated-src/gentreesrc/test/java/"

// override test task with custom classpath and as a JavaExec, to make it debuggable.
tasks.register(taskName, JavaExec) {
	main = 'de.clashsoft.gentreesrc.Main'
	classpath = sourceSets.main.runtimeClasspath
	args = [ inputDir, '-o', outputDir, '--delete-old' ]

	inputs.dir(inputDir)
	outputs.dir(outputDir)
}

tasks.named('gentreesrcTestJava') {
	enabled = false
	dependsOn taskName
}
