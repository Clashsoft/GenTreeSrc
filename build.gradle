plugins {
	id 'java'
	id 'antlr'
	id 'com.jfrog.bintray' version '1.8.4'
	id 'maven-publish'
}

group 'de.clashsoft'
version '0.1.0'
description 'A tool that generates Tree and Visitor classes from an AST model description file.'

project.ext {
	niceName = 'GenTreeSrc'
	websiteUrl = 'https://github.com/Clashsoft/gentreesrc'
	issueTrackerUrl = 'https://github.com/Clashsoft/gentreesrc/issues'
	vcsUrl = 'https://github.com/Clashsoft/gentreesrc'
	githubRepo = 'Clashsoft/gentreesrc'
	labels = [ 'source', 'generator', 'tree', 'ast' ]
}

sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

configurations {
	compile {
		extendsFrom = extendsFrom.findAll { it != configurations.antlr }
	}
}

dependencies {
	testCompile group: 'junit', name: 'junit', version: '4.12'

	// https://mvnrepository.com/artifact/org.antlr/antlr4
	antlr group: 'org.antlr', name: 'antlr4', version: '4.7.2'

	// https://mvnrepository.com/artifact/org.antlr/antlr4-runtime
	compile group: 'org.antlr', name: 'antlr4-runtime', version: '4.7.2'

	// https://mvnrepository.com/artifact/org.antlr/ST4
	compile group: 'org.antlr', name: 'ST4', version: '4.1'
}

sourceSets.main.java.srcDir("$buildDir/generated-src/antlr/main/")

task sourcesJar(type: Jar) {
	from sourceSets.main.allSource
	classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

def pomConfig = {
	licenses {
		license {
			name 'BSD 3-Clause "New" or "Revised" License'
			url 'https://opensource.org/licenses/BSD-3-Clause'
		}
	}

	developers {
		developer {
			id 'Clashsoft'
			name 'Adrian Kunz'
			email 'clashsoft@hotmail.com'
		}
	}

	scm {
		url project.vcsUrl
	}
}

publishing {
	publications {
		GenTreeSrc(MavenPublication) {
			from components.java
			artifact sourcesJar
			artifact javadocJar
			groupId project.group
			artifactId project.name
			version project.version

			pom.withXml {
				def root = asNode()
				root.appendNode('description', project.description)
				root.appendNode('name', project.niceName)
				root.appendNode('url', project.websiteUrl)
				root.children().last() + pomConfig
			}
		}
	}
}

bintray {
	user = System.getenv('BINTRAY_USER')
	key = System.getenv('BINTRAY_KEY')
	publications = [ 'GenTreeSrc' ]
	// publish = true
	// override = true

	pkg {
		repo = 'maven'
		name = project.name
		// userOrg = ''
		desc = project.description
		websiteUrl = project.websiteUrl
		issueTrackerUrl = project.issueTrackerUrl
		vcsUrl = project.vcsUrl
		licenses = [ 'BSD 3-Clause' ]
		labels = project.labels
		publicDownloadNumbers = true
		// attributes = []

		githubRepo = project.githubRepo
		githubReleaseNotesFile = 'CHANGELOG.md'

		version {
			name = project.version
			desc = "$project.name v$project.version"
			released = new Date()
			vcsTag = "v$project.version"
			// attributes = []
		}
	}
}
