ofMethod(className, parameters, arguments) ::= <<
static <className> of(<parameters>) { return new Impl(<arguments>); }

>>

constructor(className, parameters, body) ::= <<
public <className>(<parameters>)
{
	<body>
}

>>

acceptMethod(className, superClass) ::= <<
\<P, R> R accept(<superClass>.Visitor\<P, R> visitor, P par);

>>

acceptMethodImpl(className, superClass) ::= <<
@Override public \<P, R> R accept(<superClass>.Visitor\<P, R> visitor, P par)
{
	return visitor.visit<className>(this, par);
}

>>

visitMethod(override, className) ::= <<
<if(override)>@Override <endif>R visit<className>(<className> <className>, P par);

>>
